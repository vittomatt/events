version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: docker/Dockerfile
        ports:
            - '3000:3000'
        environment:
            - DB_HOST=db
        env_file:
            - .env
        volumes:
            - .:/app
            - /app/node_modules
            - /app/dist
        depends_on:
            db:
                condition: service_healthy
        networks:
            - videonet
    db:
        image: postgres:15-alpine
        container_name: postgres
        restart: unless-stopped
        env_file:
            - .env
        ports:
            - '5432:5432'
        volumes:
            - db_data:/var/lib/postgresql/data
        networks:
            - videonet
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -h localhost || exit 1']
            interval: 5s
            timeout: 3s
            retries: 3
            start_period: 5s
    redis:
        image: redis:alpine
        container_name: redis
        restart: unless-stopped
        ports:
            - '6379:6379'
        networks:
            - videonet
networks:
    videonet:
        driver: bridge

volumes:
    db_data:
